// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Robot_message.proto

#ifndef PROTOBUF_Robot_5fmessage_2eproto__INCLUDED
#define PROTOBUF_Robot_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "position_message.pb.h"
#include "RobotCommand_message.pb.h"
// @@protoc_insertion_point(includes)
class RobotCommand_message;
class RobotCommand_messageDefaultTypeInternal;
extern RobotCommand_messageDefaultTypeInternal _RobotCommand_message_default_instance_;
class Robot_message;
class Robot_messageDefaultTypeInternal;
extern Robot_messageDefaultTypeInternal _Robot_message_default_instance_;
class position_message;
class position_messageDefaultTypeInternal;
extern position_messageDefaultTypeInternal _position_message_default_instance_;

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Robot_5fmessage_2eproto();
void protobuf_InitDefaults_Robot_5fmessage_2eproto();

enum Robot_message_AgentStatus {
  Robot_message_AgentStatus_Idle = 1,
  Robot_message_AgentStatus_Passing = 2,
  Robot_message_AgentStatus_Kicking = 3,
  Robot_message_AgentStatus_Chiping = 4,
  Robot_message_AgentStatus_FollowingBall = 5,
  Robot_message_AgentStatus_BlockingBall = 6,
  Robot_message_AgentStatus_BlockingRobot = 7,
  Robot_message_AgentStatus_RecievingPass = 8
};
bool Robot_message_AgentStatus_IsValid(int value);
const Robot_message_AgentStatus Robot_message_AgentStatus_AgentStatus_MIN = Robot_message_AgentStatus_Idle;
const Robot_message_AgentStatus Robot_message_AgentStatus_AgentStatus_MAX = Robot_message_AgentStatus_RecievingPass;
const int Robot_message_AgentStatus_AgentStatus_ARRAYSIZE = Robot_message_AgentStatus_AgentStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* Robot_message_AgentStatus_descriptor();
inline const ::std::string& Robot_message_AgentStatus_Name(Robot_message_AgentStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    Robot_message_AgentStatus_descriptor(), value);
}
inline bool Robot_message_AgentStatus_Parse(
    const ::std::string& name, Robot_message_AgentStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Robot_message_AgentStatus>(
    Robot_message_AgentStatus_descriptor(), name, value);
}
enum Robot_message_AgentRegion {
  Robot_message_AgentRegion_NoRegion = 21,
  Robot_message_AgentRegion_Left = 22,
  Robot_message_AgentRegion_Center = 23,
  Robot_message_AgentRegion_Right = 24
};
bool Robot_message_AgentRegion_IsValid(int value);
const Robot_message_AgentRegion Robot_message_AgentRegion_AgentRegion_MIN = Robot_message_AgentRegion_NoRegion;
const Robot_message_AgentRegion Robot_message_AgentRegion_AgentRegion_MAX = Robot_message_AgentRegion_Right;
const int Robot_message_AgentRegion_AgentRegion_ARRAYSIZE = Robot_message_AgentRegion_AgentRegion_MAX + 1;

const ::google::protobuf::EnumDescriptor* Robot_message_AgentRegion_descriptor();
inline const ::std::string& Robot_message_AgentRegion_Name(Robot_message_AgentRegion value) {
  return ::google::protobuf::internal::NameOfEnum(
    Robot_message_AgentRegion_descriptor(), value);
}
inline bool Robot_message_AgentRegion_Parse(
    const ::std::string& name, Robot_message_AgentRegion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Robot_message_AgentRegion>(
    Robot_message_AgentRegion_descriptor(), name, value);
}
enum Robot_message_AgentRole {
  Robot_message_AgentRole_NoRole = 31,
  Robot_message_AgentRole_ArcMid = 32,
  Robot_message_AgentRole_ArcLeft = 33,
  Robot_message_AgentRole_ArcRight = 34,
  Robot_message_AgentRole_FixedPositionLeft = 35,
  Robot_message_AgentRole_FixedPositionRight = 36,
  Robot_message_AgentRole_FixedPositionMid = 37,
  Robot_message_AgentRole_AttackerLeft = 38,
  Robot_message_AgentRole_AttackerRight = 39,
  Robot_message_AgentRole_AttackerMid = 40,
  Robot_message_AgentRole_Blocker = 41,
  Robot_message_AgentRole_DefenderLeft = 42,
  Robot_message_AgentRole_DefenderRight = 43,
  Robot_message_AgentRole_DefenderMid = 44,
  Robot_message_AgentRole_Golie = 45
};
bool Robot_message_AgentRole_IsValid(int value);
const Robot_message_AgentRole Robot_message_AgentRole_AgentRole_MIN = Robot_message_AgentRole_NoRole;
const Robot_message_AgentRole Robot_message_AgentRole_AgentRole_MAX = Robot_message_AgentRole_Golie;
const int Robot_message_AgentRole_AgentRole_ARRAYSIZE = Robot_message_AgentRole_AgentRole_MAX + 1;

const ::google::protobuf::EnumDescriptor* Robot_message_AgentRole_descriptor();
inline const ::std::string& Robot_message_AgentRole_Name(Robot_message_AgentRole value) {
  return ::google::protobuf::internal::NameOfEnum(
    Robot_message_AgentRole_descriptor(), value);
}
inline bool Robot_message_AgentRole_Parse(
    const ::std::string& name, Robot_message_AgentRole* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Robot_message_AgentRole>(
    Robot_message_AgentRole_descriptor(), name, value);
}
// ===================================================================

class Robot_message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Robot_message) */ {
 public:
  Robot_message();
  virtual ~Robot_message();

  Robot_message(const Robot_message& from);

  inline Robot_message& operator=(const Robot_message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Robot_message& default_instance();

  static inline const Robot_message* internal_default_instance() {
    return reinterpret_cast<const Robot_message*>(
               &_Robot_message_default_instance_);
  }

  void Swap(Robot_message* other);

  // implements Message ----------------------------------------------

  inline Robot_message* New() const PROTOBUF_FINAL { return New(NULL); }

  Robot_message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Robot_message& from);
  void MergeFrom(const Robot_message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Robot_message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Robot_message_AgentStatus AgentStatus;
  static const AgentStatus Idle =
    Robot_message_AgentStatus_Idle;
  static const AgentStatus Passing =
    Robot_message_AgentStatus_Passing;
  static const AgentStatus Kicking =
    Robot_message_AgentStatus_Kicking;
  static const AgentStatus Chiping =
    Robot_message_AgentStatus_Chiping;
  static const AgentStatus FollowingBall =
    Robot_message_AgentStatus_FollowingBall;
  static const AgentStatus BlockingBall =
    Robot_message_AgentStatus_BlockingBall;
  static const AgentStatus BlockingRobot =
    Robot_message_AgentStatus_BlockingRobot;
  static const AgentStatus RecievingPass =
    Robot_message_AgentStatus_RecievingPass;
  static inline bool AgentStatus_IsValid(int value) {
    return Robot_message_AgentStatus_IsValid(value);
  }
  static const AgentStatus AgentStatus_MIN =
    Robot_message_AgentStatus_AgentStatus_MIN;
  static const AgentStatus AgentStatus_MAX =
    Robot_message_AgentStatus_AgentStatus_MAX;
  static const int AgentStatus_ARRAYSIZE =
    Robot_message_AgentStatus_AgentStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AgentStatus_descriptor() {
    return Robot_message_AgentStatus_descriptor();
  }
  static inline const ::std::string& AgentStatus_Name(AgentStatus value) {
    return Robot_message_AgentStatus_Name(value);
  }
  static inline bool AgentStatus_Parse(const ::std::string& name,
      AgentStatus* value) {
    return Robot_message_AgentStatus_Parse(name, value);
  }

  typedef Robot_message_AgentRegion AgentRegion;
  static const AgentRegion NoRegion =
    Robot_message_AgentRegion_NoRegion;
  static const AgentRegion Left =
    Robot_message_AgentRegion_Left;
  static const AgentRegion Center =
    Robot_message_AgentRegion_Center;
  static const AgentRegion Right =
    Robot_message_AgentRegion_Right;
  static inline bool AgentRegion_IsValid(int value) {
    return Robot_message_AgentRegion_IsValid(value);
  }
  static const AgentRegion AgentRegion_MIN =
    Robot_message_AgentRegion_AgentRegion_MIN;
  static const AgentRegion AgentRegion_MAX =
    Robot_message_AgentRegion_AgentRegion_MAX;
  static const int AgentRegion_ARRAYSIZE =
    Robot_message_AgentRegion_AgentRegion_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AgentRegion_descriptor() {
    return Robot_message_AgentRegion_descriptor();
  }
  static inline const ::std::string& AgentRegion_Name(AgentRegion value) {
    return Robot_message_AgentRegion_Name(value);
  }
  static inline bool AgentRegion_Parse(const ::std::string& name,
      AgentRegion* value) {
    return Robot_message_AgentRegion_Parse(name, value);
  }

  typedef Robot_message_AgentRole AgentRole;
  static const AgentRole NoRole =
    Robot_message_AgentRole_NoRole;
  static const AgentRole ArcMid =
    Robot_message_AgentRole_ArcMid;
  static const AgentRole ArcLeft =
    Robot_message_AgentRole_ArcLeft;
  static const AgentRole ArcRight =
    Robot_message_AgentRole_ArcRight;
  static const AgentRole FixedPositionLeft =
    Robot_message_AgentRole_FixedPositionLeft;
  static const AgentRole FixedPositionRight =
    Robot_message_AgentRole_FixedPositionRight;
  static const AgentRole FixedPositionMid =
    Robot_message_AgentRole_FixedPositionMid;
  static const AgentRole AttackerLeft =
    Robot_message_AgentRole_AttackerLeft;
  static const AgentRole AttackerRight =
    Robot_message_AgentRole_AttackerRight;
  static const AgentRole AttackerMid =
    Robot_message_AgentRole_AttackerMid;
  static const AgentRole Blocker =
    Robot_message_AgentRole_Blocker;
  static const AgentRole DefenderLeft =
    Robot_message_AgentRole_DefenderLeft;
  static const AgentRole DefenderRight =
    Robot_message_AgentRole_DefenderRight;
  static const AgentRole DefenderMid =
    Robot_message_AgentRole_DefenderMid;
  static const AgentRole Golie =
    Robot_message_AgentRole_Golie;
  static inline bool AgentRole_IsValid(int value) {
    return Robot_message_AgentRole_IsValid(value);
  }
  static const AgentRole AgentRole_MIN =
    Robot_message_AgentRole_AgentRole_MIN;
  static const AgentRole AgentRole_MAX =
    Robot_message_AgentRole_AgentRole_MAX;
  static const int AgentRole_ARRAYSIZE =
    Robot_message_AgentRole_AgentRole_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AgentRole_descriptor() {
    return Robot_message_AgentRole_descriptor();
  }
  static inline const ::std::string& AgentRole_Name(AgentRole value) {
    return Robot_message_AgentRole_Name(value);
  }
  static inline bool AgentRole_Parse(const ::std::string& name,
      AgentRole* value) {
    return Robot_message_AgentRole_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required bool isValid = 1;
  bool has_isvalid() const;
  void clear_isvalid();
  static const int kIsValidFieldNumber = 1;
  bool isvalid() const;
  void set_isvalid(bool value);

  // required .position_message position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::position_message& position() const;
  ::position_message* mutable_position();
  ::position_message* release_position();
  void set_allocated_position(::position_message* position);

  // required .position_message velocity = 3;
  bool has_velocity() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 3;
  const ::position_message& velocity() const;
  ::position_message* mutable_velocity();
  ::position_message* release_velocity();
  void set_allocated_velocity(::position_message* velocity);

  // optional .Robot_message.AgentStatus status = 4;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::Robot_message_AgentStatus status() const;
  void set_status(::Robot_message_AgentStatus value);

  // optional .Robot_message.AgentRole role = 5;
  bool has_role() const;
  void clear_role();
  static const int kRoleFieldNumber = 5;
  ::Robot_message_AgentRole role() const;
  void set_role(::Robot_message_AgentRole value);

  // optional .Robot_message.AgentRegion region = 6;
  bool has_region() const;
  void clear_region();
  static const int kRegionFieldNumber = 6;
  ::Robot_message_AgentRegion region() const;
  void set_region(::Robot_message_AgentRegion value);

  // optional .RobotCommand_message rc = 7;
  bool has_rc() const;
  void clear_rc();
  static const int kRcFieldNumber = 7;
  const ::RobotCommand_message& rc() const;
  ::RobotCommand_message* mutable_rc();
  ::RobotCommand_message* release_rc();
  void set_allocated_rc(::RobotCommand_message* rc);

  // @@protoc_insertion_point(class_scope:Robot_message)
 private:
  void set_has_isvalid();
  void clear_has_isvalid();
  void set_has_position();
  void clear_has_position();
  void set_has_velocity();
  void clear_has_velocity();
  void set_has_status();
  void clear_has_status();
  void set_has_role();
  void clear_has_role();
  void set_has_region();
  void clear_has_region();
  void set_has_rc();
  void clear_has_rc();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::position_message* position_;
  ::position_message* velocity_;
  ::RobotCommand_message* rc_;
  bool isvalid_;
  int region_;
  int status_;
  int role_;
  friend void  protobuf_InitDefaults_Robot_5fmessage_2eproto_impl();
  friend void  protobuf_AddDesc_Robot_5fmessage_2eproto_impl();
  friend const ::google::protobuf::uint32* protobuf_Offsets_Robot_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_Robot_5fmessage_2eproto();

};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Robot_message

// required bool isValid = 1;
inline bool Robot_message::has_isvalid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Robot_message::set_has_isvalid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Robot_message::clear_has_isvalid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Robot_message::clear_isvalid() {
  isvalid_ = false;
  clear_has_isvalid();
}
inline bool Robot_message::isvalid() const {
  // @@protoc_insertion_point(field_get:Robot_message.isValid)
  return isvalid_;
}
inline void Robot_message::set_isvalid(bool value) {
  set_has_isvalid();
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:Robot_message.isValid)
}

// required .position_message position = 2;
inline bool Robot_message::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Robot_message::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Robot_message::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Robot_message::clear_position() {
  if (position_ != NULL) position_->::position_message::Clear();
  clear_has_position();
}
inline const ::position_message& Robot_message::position() const {
  // @@protoc_insertion_point(field_get:Robot_message.position)
  return position_ != NULL ? *position_
                         : *::position_message::internal_default_instance();
}
inline ::position_message* Robot_message::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = new ::position_message;
  }
  // @@protoc_insertion_point(field_mutable:Robot_message.position)
  return position_;
}
inline ::position_message* Robot_message::release_position() {
  // @@protoc_insertion_point(field_release:Robot_message.position)
  clear_has_position();
  ::position_message* temp = position_;
  position_ = NULL;
  return temp;
}
inline void Robot_message::set_allocated_position(::position_message* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:Robot_message.position)
}

// required .position_message velocity = 3;
inline bool Robot_message::has_velocity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Robot_message::set_has_velocity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Robot_message::clear_has_velocity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Robot_message::clear_velocity() {
  if (velocity_ != NULL) velocity_->::position_message::Clear();
  clear_has_velocity();
}
inline const ::position_message& Robot_message::velocity() const {
  // @@protoc_insertion_point(field_get:Robot_message.velocity)
  return velocity_ != NULL ? *velocity_
                         : *::position_message::internal_default_instance();
}
inline ::position_message* Robot_message::mutable_velocity() {
  set_has_velocity();
  if (velocity_ == NULL) {
    velocity_ = new ::position_message;
  }
  // @@protoc_insertion_point(field_mutable:Robot_message.velocity)
  return velocity_;
}
inline ::position_message* Robot_message::release_velocity() {
  // @@protoc_insertion_point(field_release:Robot_message.velocity)
  clear_has_velocity();
  ::position_message* temp = velocity_;
  velocity_ = NULL;
  return temp;
}
inline void Robot_message::set_allocated_velocity(::position_message* velocity) {
  delete velocity_;
  velocity_ = velocity;
  if (velocity) {
    set_has_velocity();
  } else {
    clear_has_velocity();
  }
  // @@protoc_insertion_point(field_set_allocated:Robot_message.velocity)
}

// optional .Robot_message.AgentStatus status = 4;
inline bool Robot_message::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Robot_message::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Robot_message::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Robot_message::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::Robot_message_AgentStatus Robot_message::status() const {
  // @@protoc_insertion_point(field_get:Robot_message.status)
  return static_cast< ::Robot_message_AgentStatus >(status_);
}
inline void Robot_message::set_status(::Robot_message_AgentStatus value) {
  assert(::Robot_message_AgentStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Robot_message.status)
}

// optional .Robot_message.AgentRole role = 5;
inline bool Robot_message::has_role() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Robot_message::set_has_role() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Robot_message::clear_has_role() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Robot_message::clear_role() {
  role_ = 31;
  clear_has_role();
}
inline ::Robot_message_AgentRole Robot_message::role() const {
  // @@protoc_insertion_point(field_get:Robot_message.role)
  return static_cast< ::Robot_message_AgentRole >(role_);
}
inline void Robot_message::set_role(::Robot_message_AgentRole value) {
  assert(::Robot_message_AgentRole_IsValid(value));
  set_has_role();
  role_ = value;
  // @@protoc_insertion_point(field_set:Robot_message.role)
}

// optional .Robot_message.AgentRegion region = 6;
inline bool Robot_message::has_region() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Robot_message::set_has_region() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Robot_message::clear_has_region() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Robot_message::clear_region() {
  region_ = 21;
  clear_has_region();
}
inline ::Robot_message_AgentRegion Robot_message::region() const {
  // @@protoc_insertion_point(field_get:Robot_message.region)
  return static_cast< ::Robot_message_AgentRegion >(region_);
}
inline void Robot_message::set_region(::Robot_message_AgentRegion value) {
  assert(::Robot_message_AgentRegion_IsValid(value));
  set_has_region();
  region_ = value;
  // @@protoc_insertion_point(field_set:Robot_message.region)
}

// optional .RobotCommand_message rc = 7;
inline bool Robot_message::has_rc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Robot_message::set_has_rc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Robot_message::clear_has_rc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Robot_message::clear_rc() {
  if (rc_ != NULL) rc_->::RobotCommand_message::Clear();
  clear_has_rc();
}
inline const ::RobotCommand_message& Robot_message::rc() const {
  // @@protoc_insertion_point(field_get:Robot_message.rc)
  return rc_ != NULL ? *rc_
                         : *::RobotCommand_message::internal_default_instance();
}
inline ::RobotCommand_message* Robot_message::mutable_rc() {
  set_has_rc();
  if (rc_ == NULL) {
    rc_ = new ::RobotCommand_message;
  }
  // @@protoc_insertion_point(field_mutable:Robot_message.rc)
  return rc_;
}
inline ::RobotCommand_message* Robot_message::release_rc() {
  // @@protoc_insertion_point(field_release:Robot_message.rc)
  clear_has_rc();
  ::RobotCommand_message* temp = rc_;
  rc_ = NULL;
  return temp;
}
inline void Robot_message::set_allocated_rc(::RobotCommand_message* rc) {
  delete rc_;
  rc_ = rc;
  if (rc) {
    set_has_rc();
  } else {
    clear_has_rc();
  }
  // @@protoc_insertion_point(field_set_allocated:Robot_message.rc)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Robot_message_AgentStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Robot_message_AgentStatus>() {
  return ::Robot_message_AgentStatus_descriptor();
}
template <> struct is_proto_enum< ::Robot_message_AgentRegion> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Robot_message_AgentRegion>() {
  return ::Robot_message_AgentRegion_descriptor();
}
template <> struct is_proto_enum< ::Robot_message_AgentRole> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Robot_message_AgentRole>() {
  return ::Robot_message_AgentRole_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Robot_5fmessage_2eproto__INCLUDED
