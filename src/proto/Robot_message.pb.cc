// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Robot_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Robot_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Robot_message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Robot_message_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Robot_message_AgentStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Robot_message_AgentRegion_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Robot_message_AgentRole_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Robot_5fmessage_2eproto() {
  protobuf_AddDesc_Robot_5fmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Robot_message.proto");
  GOOGLE_CHECK(file != NULL);
  Robot_message_descriptor_ = file->message_type(0);
  static const int Robot_message_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot_message, isvalid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot_message, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot_message, velocity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot_message, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot_message, role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot_message, region_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot_message, rc_),
  };
  Robot_message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Robot_message_descriptor_,
      Robot_message::default_instance_,
      Robot_message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot_message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot_message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Robot_message));
  Robot_message_AgentStatus_descriptor_ = Robot_message_descriptor_->enum_type(0);
  Robot_message_AgentRegion_descriptor_ = Robot_message_descriptor_->enum_type(1);
  Robot_message_AgentRole_descriptor_ = Robot_message_descriptor_->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Robot_5fmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Robot_message_descriptor_, &Robot_message::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Robot_5fmessage_2eproto() {
  delete Robot_message::default_instance_;
  delete Robot_message_reflection_;
}

void protobuf_AddDesc_Robot_5fmessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_position_5fmessage_2eproto();
  ::protobuf_AddDesc_RobotCommand_5fmessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023Robot_message.proto\032\026position_message."
    "proto\032\032RobotCommand_message.proto\"\341\005\n\rRo"
    "bot_message\022\017\n\007isValid\030\001 \002(\010\022#\n\010position"
    "\030\002 \002(\0132\021.position_message\022#\n\010velocity\030\003 "
    "\002(\0132\021.position_message\022*\n\006status\030\004 \001(\0162\032"
    ".Robot_message.AgentStatus\022&\n\004role\030\005 \001(\016"
    "2\030.Robot_message.AgentRole\022*\n\006region\030\006 \001"
    "(\0162\032.Robot_message.AgentRegion\022!\n\002rc\030\007 \001"
    "(\0132\025.RobotCommand_message\"\211\001\n\013AgentStatu"
    "s\022\010\n\004Idle\020\001\022\013\n\007Passing\020\002\022\013\n\007Kicking\020\003\022\013\n"
    "\007Chiping\020\004\022\021\n\rFollowingBall\020\005\022\020\n\014Blockin"
    "gBall\020\006\022\021\n\rBlockingRobot\020\007\022\021\n\rRecievingP"
    "ass\020\010\"<\n\013AgentRegion\022\014\n\010NoRegion\020\025\022\010\n\004Le"
    "ft\020\026\022\n\n\006Center\020\027\022\t\n\005Right\020\030\"\207\002\n\tAgentRol"
    "e\022\n\n\006NoRole\020\037\022\n\n\006ArcMid\020 \022\013\n\007ArcLeft\020!\022\014"
    "\n\010ArcRight\020\"\022\025\n\021FixedPositionLeft\020#\022\026\n\022F"
    "ixedPositionRight\020$\022\024\n\020FixedPositionMid\020"
    "%\022\020\n\014AttackerLeft\020&\022\021\n\rAttackerRight\020\'\022\017"
    "\n\013AttackerMid\020(\022\013\n\007Blocker\020)\022\020\n\014Defender"
    "Left\020*\022\021\n\rDefenderRight\020+\022\017\n\013DefenderMid"
    "\020,\022\t\n\005Golie\020-", 813);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Robot_message.proto", &protobuf_RegisterTypes);
  Robot_message::default_instance_ = new Robot_message();
  Robot_message::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Robot_5fmessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Robot_5fmessage_2eproto {
  StaticDescriptorInitializer_Robot_5fmessage_2eproto() {
    protobuf_AddDesc_Robot_5fmessage_2eproto();
  }
} static_descriptor_initializer_Robot_5fmessage_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Robot_message_AgentStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Robot_message_AgentStatus_descriptor_;
}
bool Robot_message_AgentStatus_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Robot_message_AgentStatus Robot_message::Idle;
const Robot_message_AgentStatus Robot_message::Passing;
const Robot_message_AgentStatus Robot_message::Kicking;
const Robot_message_AgentStatus Robot_message::Chiping;
const Robot_message_AgentStatus Robot_message::FollowingBall;
const Robot_message_AgentStatus Robot_message::BlockingBall;
const Robot_message_AgentStatus Robot_message::BlockingRobot;
const Robot_message_AgentStatus Robot_message::RecievingPass;
const Robot_message_AgentStatus Robot_message::AgentStatus_MIN;
const Robot_message_AgentStatus Robot_message::AgentStatus_MAX;
const int Robot_message::AgentStatus_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* Robot_message_AgentRegion_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Robot_message_AgentRegion_descriptor_;
}
bool Robot_message_AgentRegion_IsValid(int value) {
  switch(value) {
    case 21:
    case 22:
    case 23:
    case 24:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Robot_message_AgentRegion Robot_message::NoRegion;
const Robot_message_AgentRegion Robot_message::Left;
const Robot_message_AgentRegion Robot_message::Center;
const Robot_message_AgentRegion Robot_message::Right;
const Robot_message_AgentRegion Robot_message::AgentRegion_MIN;
const Robot_message_AgentRegion Robot_message::AgentRegion_MAX;
const int Robot_message::AgentRegion_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* Robot_message_AgentRole_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Robot_message_AgentRole_descriptor_;
}
bool Robot_message_AgentRole_IsValid(int value) {
  switch(value) {
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Robot_message_AgentRole Robot_message::NoRole;
const Robot_message_AgentRole Robot_message::ArcMid;
const Robot_message_AgentRole Robot_message::ArcLeft;
const Robot_message_AgentRole Robot_message::ArcRight;
const Robot_message_AgentRole Robot_message::FixedPositionLeft;
const Robot_message_AgentRole Robot_message::FixedPositionRight;
const Robot_message_AgentRole Robot_message::FixedPositionMid;
const Robot_message_AgentRole Robot_message::AttackerLeft;
const Robot_message_AgentRole Robot_message::AttackerRight;
const Robot_message_AgentRole Robot_message::AttackerMid;
const Robot_message_AgentRole Robot_message::Blocker;
const Robot_message_AgentRole Robot_message::DefenderLeft;
const Robot_message_AgentRole Robot_message::DefenderRight;
const Robot_message_AgentRole Robot_message::DefenderMid;
const Robot_message_AgentRole Robot_message::Golie;
const Robot_message_AgentRole Robot_message::AgentRole_MIN;
const Robot_message_AgentRole Robot_message::AgentRole_MAX;
const int Robot_message::AgentRole_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Robot_message::kIsValidFieldNumber;
const int Robot_message::kPositionFieldNumber;
const int Robot_message::kVelocityFieldNumber;
const int Robot_message::kStatusFieldNumber;
const int Robot_message::kRoleFieldNumber;
const int Robot_message::kRegionFieldNumber;
const int Robot_message::kRcFieldNumber;
#endif  // !_MSC_VER

Robot_message::Robot_message()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Robot_message)
}

void Robot_message::InitAsDefaultInstance() {
  position_ = const_cast< ::position_message*>(&::position_message::default_instance());
  velocity_ = const_cast< ::position_message*>(&::position_message::default_instance());
  rc_ = const_cast< ::RobotCommand_message*>(&::RobotCommand_message::default_instance());
}

Robot_message::Robot_message(const Robot_message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Robot_message)
}

void Robot_message::SharedCtor() {
  _cached_size_ = 0;
  isvalid_ = false;
  position_ = NULL;
  velocity_ = NULL;
  status_ = 1;
  role_ = 31;
  region_ = 21;
  rc_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Robot_message::~Robot_message() {
  // @@protoc_insertion_point(destructor:Robot_message)
  SharedDtor();
}

void Robot_message::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
    delete velocity_;
    delete rc_;
  }
}

void Robot_message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Robot_message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Robot_message_descriptor_;
}

const Robot_message& Robot_message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Robot_5fmessage_2eproto();
  return *default_instance_;
}

Robot_message* Robot_message::default_instance_ = NULL;

Robot_message* Robot_message::New() const {
  return new Robot_message;
}

void Robot_message::Clear() {
  if (_has_bits_[0 / 32] & 127) {
    isvalid_ = false;
    if (has_position()) {
      if (position_ != NULL) position_->::position_message::Clear();
    }
    if (has_velocity()) {
      if (velocity_ != NULL) velocity_->::position_message::Clear();
    }
    status_ = 1;
    role_ = 31;
    region_ = 21;
    if (has_rc()) {
      if (rc_ != NULL) rc_->::RobotCommand_message::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Robot_message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Robot_message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool isValid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
          set_has_isvalid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_position;
        break;
      }

      // required .position_message position = 2;
      case 2: {
        if (tag == 18) {
         parse_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_velocity;
        break;
      }

      // required .position_message velocity = 3;
      case 3: {
        if (tag == 26) {
         parse_velocity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_status;
        break;
      }

      // optional .Robot_message.AgentStatus status = 4;
      case 4: {
        if (tag == 32) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Robot_message_AgentStatus_IsValid(value)) {
            set_status(static_cast< ::Robot_message_AgentStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_role;
        break;
      }

      // optional .Robot_message.AgentRole role = 5;
      case 5: {
        if (tag == 40) {
         parse_role:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Robot_message_AgentRole_IsValid(value)) {
            set_role(static_cast< ::Robot_message_AgentRole >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_region;
        break;
      }

      // optional .Robot_message.AgentRegion region = 6;
      case 6: {
        if (tag == 48) {
         parse_region:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Robot_message_AgentRegion_IsValid(value)) {
            set_region(static_cast< ::Robot_message_AgentRegion >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_rc;
        break;
      }

      // optional .RobotCommand_message rc = 7;
      case 7: {
        if (tag == 58) {
         parse_rc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rc()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Robot_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Robot_message)
  return false;
#undef DO_
}

void Robot_message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Robot_message)
  // required bool isValid = 1;
  if (has_isvalid()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // required .position_message position = 2;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->position(), output);
  }

  // required .position_message velocity = 3;
  if (has_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->velocity(), output);
  }

  // optional .Robot_message.AgentStatus status = 4;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->status(), output);
  }

  // optional .Robot_message.AgentRole role = 5;
  if (has_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->role(), output);
  }

  // optional .Robot_message.AgentRegion region = 6;
  if (has_region()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->region(), output);
  }

  // optional .RobotCommand_message rc = 7;
  if (has_rc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->rc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Robot_message)
}

::google::protobuf::uint8* Robot_message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Robot_message)
  // required bool isValid = 1;
  if (has_isvalid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // required .position_message position = 2;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->position(), target);
  }

  // required .position_message velocity = 3;
  if (has_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->velocity(), target);
  }

  // optional .Robot_message.AgentStatus status = 4;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->status(), target);
  }

  // optional .Robot_message.AgentRole role = 5;
  if (has_role()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->role(), target);
  }

  // optional .Robot_message.AgentRegion region = 6;
  if (has_region()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->region(), target);
  }

  // optional .RobotCommand_message rc = 7;
  if (has_rc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->rc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Robot_message)
  return target;
}

int Robot_message::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool isValid = 1;
    if (has_isvalid()) {
      total_size += 1 + 1;
    }

    // required .position_message position = 2;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }

    // required .position_message velocity = 3;
    if (has_velocity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->velocity());
    }

    // optional .Robot_message.AgentStatus status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional .Robot_message.AgentRole role = 5;
    if (has_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->role());
    }

    // optional .Robot_message.AgentRegion region = 6;
    if (has_region()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->region());
    }

    // optional .RobotCommand_message rc = 7;
    if (has_rc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Robot_message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Robot_message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Robot_message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Robot_message::MergeFrom(const Robot_message& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_isvalid()) {
      set_isvalid(from.isvalid());
    }
    if (from.has_position()) {
      mutable_position()->::position_message::MergeFrom(from.position());
    }
    if (from.has_velocity()) {
      mutable_velocity()->::position_message::MergeFrom(from.velocity());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_role()) {
      set_role(from.role());
    }
    if (from.has_region()) {
      set_region(from.region());
    }
    if (from.has_rc()) {
      mutable_rc()->::RobotCommand_message::MergeFrom(from.rc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Robot_message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Robot_message::CopyFrom(const Robot_message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Robot_message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_position()) {
    if (!this->position().IsInitialized()) return false;
  }
  if (has_velocity()) {
    if (!this->velocity().IsInitialized()) return false;
  }
  if (has_rc()) {
    if (!this->rc().IsInitialized()) return false;
  }
  return true;
}

void Robot_message::Swap(Robot_message* other) {
  if (other != this) {
    std::swap(isvalid_, other->isvalid_);
    std::swap(position_, other->position_);
    std::swap(velocity_, other->velocity_);
    std::swap(status_, other->status_);
    std::swap(role_, other->role_);
    std::swap(region_, other->region_);
    std::swap(rc_, other->rc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Robot_message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Robot_message_descriptor_;
  metadata.reflection = Robot_message_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
