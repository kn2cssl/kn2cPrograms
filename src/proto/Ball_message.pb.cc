// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Ball_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Ball_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Ball_message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Ball_message_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Ball_5fmessage_2eproto() {
  protobuf_AddDesc_Ball_5fmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Ball_message.proto");
  GOOGLE_CHECK(file != NULL);
  Ball_message_descriptor_ = file->message_type(0);
  static const int Ball_message_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ball_message, isvalid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ball_message, position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ball_message, velocity_),
  };
  Ball_message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Ball_message_descriptor_,
      Ball_message::default_instance_,
      Ball_message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ball_message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ball_message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Ball_message));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Ball_5fmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Ball_message_descriptor_, &Ball_message::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Ball_5fmessage_2eproto() {
  delete Ball_message::default_instance_;
  delete Ball_message_reflection_;
}

void protobuf_AddDesc_Ball_5fmessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_position_5fmessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022Ball_message.proto\032\026position_message.p"
    "roto\"i\n\014Ball_message\022\017\n\007isValid\030\001 \002(\010\022#\n"
    "\010position\030\002 \002(\0132\021.position_message\022#\n\010ve"
    "locity\030\003 \002(\0132\021.position_message", 151);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Ball_message.proto", &protobuf_RegisterTypes);
  Ball_message::default_instance_ = new Ball_message();
  Ball_message::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Ball_5fmessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Ball_5fmessage_2eproto {
  StaticDescriptorInitializer_Ball_5fmessage_2eproto() {
    protobuf_AddDesc_Ball_5fmessage_2eproto();
  }
} static_descriptor_initializer_Ball_5fmessage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Ball_message::kIsValidFieldNumber;
const int Ball_message::kPositionFieldNumber;
const int Ball_message::kVelocityFieldNumber;
#endif  // !_MSC_VER

Ball_message::Ball_message()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Ball_message)
}

void Ball_message::InitAsDefaultInstance() {
  position_ = const_cast< ::position_message*>(&::position_message::default_instance());
  velocity_ = const_cast< ::position_message*>(&::position_message::default_instance());
}

Ball_message::Ball_message(const Ball_message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Ball_message)
}

void Ball_message::SharedCtor() {
  _cached_size_ = 0;
  isvalid_ = false;
  position_ = NULL;
  velocity_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Ball_message::~Ball_message() {
  // @@protoc_insertion_point(destructor:Ball_message)
  SharedDtor();
}

void Ball_message::SharedDtor() {
  if (this != default_instance_) {
    delete position_;
    delete velocity_;
  }
}

void Ball_message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ball_message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Ball_message_descriptor_;
}

const Ball_message& Ball_message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Ball_5fmessage_2eproto();
  return *default_instance_;
}

Ball_message* Ball_message::default_instance_ = NULL;

Ball_message* Ball_message::New() const {
  return new Ball_message;
}

void Ball_message::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    isvalid_ = false;
    if (has_position()) {
      if (position_ != NULL) position_->::position_message::Clear();
    }
    if (has_velocity()) {
      if (velocity_ != NULL) velocity_->::position_message::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Ball_message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Ball_message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool isValid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
          set_has_isvalid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_position;
        break;
      }

      // required .position_message position = 2;
      case 2: {
        if (tag == 18) {
         parse_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_velocity;
        break;
      }

      // required .position_message velocity = 3;
      case 3: {
        if (tag == 26) {
         parse_velocity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Ball_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Ball_message)
  return false;
#undef DO_
}

void Ball_message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Ball_message)
  // required bool isValid = 1;
  if (has_isvalid()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // required .position_message position = 2;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->position(), output);
  }

  // required .position_message velocity = 3;
  if (has_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->velocity(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Ball_message)
}

::google::protobuf::uint8* Ball_message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Ball_message)
  // required bool isValid = 1;
  if (has_isvalid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // required .position_message position = 2;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->position(), target);
  }

  // required .position_message velocity = 3;
  if (has_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->velocity(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Ball_message)
  return target;
}

int Ball_message::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool isValid = 1;
    if (has_isvalid()) {
      total_size += 1 + 1;
    }

    // required .position_message position = 2;
    if (has_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->position());
    }

    // required .position_message velocity = 3;
    if (has_velocity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->velocity());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ball_message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Ball_message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Ball_message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Ball_message::MergeFrom(const Ball_message& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_isvalid()) {
      set_isvalid(from.isvalid());
    }
    if (from.has_position()) {
      mutable_position()->::position_message::MergeFrom(from.position());
    }
    if (from.has_velocity()) {
      mutable_velocity()->::position_message::MergeFrom(from.velocity());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Ball_message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ball_message::CopyFrom(const Ball_message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ball_message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_position()) {
    if (!this->position().IsInitialized()) return false;
  }
  if (has_velocity()) {
    if (!this->velocity().IsInitialized()) return false;
  }
  return true;
}

void Ball_message::Swap(Ball_message* other) {
  if (other != this) {
    std::swap(isvalid_, other->isvalid_);
    std::swap(position_, other->position_);
    std::swap(velocity_, other->velocity_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Ball_message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Ball_message_descriptor_;
  metadata.reflection = Ball_message_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
